export const advanceToolsNode = [
  {
    id: "fb79b54329746fdf",
    type: "OpenAI Tool",
    z: "b9203c19c137b9ca",
    name: "Create Reminder",
    tool: '{"type":"function","function":{"name":"create_reminder","description":"Creates reminders or todo list tasks","parameters":{"type":"object","properties":{"summary":{"description":"concise summary of what the user wants to rememeber","type":"string"},"due_date":{"type":"string","description":"ISO format of the date and time the item is due."},"response":{"type":"string","description":"A friendly response to the given command"}},"required":["summary","response"]}}}',
    x: 310,
    y: 2580,
    wires: [["0af347809cc4f889"]],
  },
  {
    id: "b78220ed2924b292",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "",
    props: [
      {
        p: "payload",
      },
      {
        p: "test",
        v: "foobar",
        vt: "str",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "",
    payloadType: "date",
    x: 340,
    y: 2460,
    wires: [["9f8d776369d7a404"]],
  },
  {
    id: "9f8d776369d7a404",
    type: "OpenAI User",
    z: "b9203c19c137b9ca",
    name: "",
    content: "Remind me to call my mom this evening",
    x: 330,
    y: 2500,
    wires: [["319c7d1026aaad68"]],
  },
  {
    id: "0af347809cc4f889",
    type: "OpenAI Chat",
    z: "b9203c19c137b9ca",
    name: "",
    tool_choice: "fb79b54329746fdf",
    token: "",
    model: "gpt-4-1106-preview",
    temperature: 0.7,
    max_tokens: 1200,
    top_p: 1,
    frequency_penalty: 0,
    presence_penalty: 0,
    x: 330,
    y: 2620,
    wires: [["3cd0ed23014414a7"]],
  },
  {
    id: "3cd0ed23014414a7",
    type: "OpenAI Response",
    z: "b9203c19c137b9ca",
    name: "",
    x: 310,
    y: 2660,
    wires: [["6f484c5590f7c945"]],
  },
  {
    id: "319c7d1026aaad68",
    type: "OpenAI System",
    z: "b9203c19c137b9ca",
    name: "",
    instruction:
      "You are a smart home assistant capable of controlling a smart home.\nIf asked a command use the appropriate function to fulfill the request.\n\nCurrent Date and time: Jan 17, 2024 2:25pm",
    x: 320,
    y: 2540,
    wires: [["fb79b54329746fdf"]],
  },
  {
    id: "6f484c5590f7c945",
    type: "debug",
    z: "b9203c19c137b9ca",
    name: "debug 155",
    active: true,
    tosidebar: true,
    console: false,
    tostatus: false,
    complete: "false",
    statusVal: "",
    statusType: "auto",
    x: 330,
    y: 2700,
    wires: [],
  },
  {
    id: "8391c8218a9045d2",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "Who's home?",
    props: [
      {
        p: "payload",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "Who's home?",
    payloadType: "str",
    x: 670,
    y: 2340,
    wires: [["e0afe7eb27f10308"]],
  },
  {
    id: "e0afe7eb27f10308",
    type: "OpenAI User",
    z: "b9203c19c137b9ca",
    name: "",
    content: "{payload}",
    x: 710,
    y: 2560,
    wires: [["c049184a70adfbf6"]],
  },
  {
    id: "014a49914283462d",
    type: "OpenAI Chat",
    z: "b9203c19c137b9ca",
    name: "",
    token: "",
    model: "gpt-4-1106-preview",
    temperature: 0.7,
    max_tokens: 1200,
    top_p: 1,
    frequency_penalty: 0,
    presence_penalty: 0,
    x: 710,
    y: 2680,
    wires: [["0ade8e81bde27d32"]],
  },
  {
    id: "0ade8e81bde27d32",
    type: "OpenAI Response",
    z: "b9203c19c137b9ca",
    name: "",
    x: 690,
    y: 2720,
    wires: [["226793995c673836"]],
  },
  {
    id: "c049184a70adfbf6",
    type: "OpenAI System",
    z: "b9203c19c137b9ca",
    name: "",
    instruction:
      'You are a smart home assistant capable of controlling a smart home.\nIf you need to take some action, use the execute_services function to fulfill your command.\n\nCurrent Date and time: Jan 17, 2024 2:25pm\n\nUse the house data below to answer any questions or take action about the house.\n[\n    {{\n        "friendly_name": "bedroom light",\n        "entity_id" : "light.bedroom_light",\n        "state": "off"\n    }},\n    {{\n        "friendly_name": "Michael\'s Presence",\n        "entity_id" : "presence.michael",\n        "state" : "office"\n    }},\n    {{\n        "friendly_name": "bedroom motion",\n        "entity_id" : "binary_sensor.bedroom_motion",\n        "state" : "off"\n    }},\n     {{\n        "friendly_name": "Office Lights",\n        "entity_id" : "light.office",\n        "state" : "off"\n    }},\n    {{\n        "friendly_name": "Kitchen Lights",\n        "entity_id" : "light.kitchen",\n        "state" : "on"\n    }},\n]',
    x: 700,
    y: 2600,
    wires: [["c0fa8891f1240484"]],
  },
  {
    id: "226793995c673836",
    type: "debug",
    z: "b9203c19c137b9ca",
    name: "debug 156",
    active: true,
    tosidebar: true,
    console: false,
    tostatus: false,
    complete: "true",
    targetType: "full",
    statusVal: "",
    statusType: "auto",
    x: 710,
    y: 2760,
    wires: [],
  },
  {
    id: "c0fa8891f1240484",
    type: "OpenAI Tool",
    z: "b9203c19c137b9ca",
    name: "execute_services",
    tool: '{"type":"function","function":{"name":"execute_services","description":"Use this function to execute service of devices in Home Assistant.","parameters":{"type":"object","properties":{"list":{"type":"array","items":{"type":"object","properties":{"domain":{"type":"string","description":"The service to be called"},"service":{"type":"string","description":"The service to be called"},"target":{"type":"object","description":"The service data object to indicate what to control.","properties":{"entity_id":{"type":"string","description":"The entity_id retrieved from available devices. It must start with domain, followed by dot character."}},"required":["entity_id"]}},"required":["domain","service","target"]}},"response":{"type":"string","description":"A friendly response to the given command"}}}}}',
    x: 690,
    y: 2640,
    wires: [["014a49914283462d"]],
  },
  {
    id: "2f169ddd9678ce94",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "is there any one in the bedroom",
    props: [
      {
        p: "payload",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "is there any one in the bedroom",
    payloadType: "str",
    x: 690,
    y: 2380,
    wires: [["e0afe7eb27f10308"]],
  },
  {
    id: "4e0edb695aac95bf",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "turn on the lights in the bedroom",
    props: [
      {
        p: "payload",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "turn on the lights in the bedroom",
    payloadType: "str",
    x: 690,
    y: 2420,
    wires: [["e0afe7eb27f10308"]],
  },
  {
    id: "0a3ab2b87bc63af3",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "Turn on all the lights",
    props: [
      {
        p: "payload",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "Turn on all the lights",
    payloadType: "str",
    x: 650,
    y: 2460,
    wires: [["e0afe7eb27f10308"]],
  },
  {
    id: "820291d38b0bf558",
    type: "comment",
    z: "b9203c19c137b9ca",
    name: "Simple: Create Reminder",
    info: "",
    x: 330,
    y: 2380,
    wires: [],
  },
  {
    id: "b48f31b080829b82",
    type: "comment",
    z: "b9203c19c137b9ca",
    name: "Complex: Change lights",
    info: "",
    x: 640,
    y: 2280,
    wires: [],
  },
  {
    id: "51a70bf45aa5bc4e",
    type: "inject",
    z: "b9203c19c137b9ca",
    name: "Set the lights blue",
    props: [
      {
        p: "payload",
      },
    ],
    repeat: "",
    crontab: "",
    once: false,
    onceDelay: 0.1,
    topic: "",
    payload: "Set the lights to blue",
    payloadType: "str",
    x: 650,
    y: 2500,
    wires: [["e0afe7eb27f10308"]],
  },
];
